module Parser
  module AST
    class Processor
      module Mixin
        def process: (Node? node) ->  Node?
      end
      include Mixin
    end
  end
end

class MyRule < Parser::AST::Processor
  include RuboCop::AST::Traversal
  def on_sym: (RuboCop::AST::SymbolNode node) -> void
  def on_if: (RuboCop::AST::IfNode node) -> void
  def on_hash: (RuboCop::AST::HashNode node) -> void
end
